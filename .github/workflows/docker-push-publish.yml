name: Publishing Docker image to Dockerhub

on:
  push:
    branches:
      - "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gaming-app:latest

  check-compose:
    runs-on: ubuntu-latest
    needs: build-and-push

    services:
      db:
        image: postgres:latest
        ports:
          - "5433:5432"
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      - name: Create .env file
        run: |
          echo "POSTGRES_DATABASE=postgres" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=admin" >> .env

      - name: Start Docker Compose
        run: docker-compose up -d

      - name: Verify DB health
        run: |
          sleep 30  # Wait for services to be fully up and running
          docker-compose ps
          docker inspect --format='{{json .State.Health}}' $(docker-compose ps -q db)
          
      - name: Stop Docker Compose
        run: docker-compose down
