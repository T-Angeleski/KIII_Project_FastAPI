# CONFIGMAP AND SECRET
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: gaming-app-namespace
data:
  POSTGRES_DB: "postgres"
  POSTGRES_USER: "postgres"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: gaming-app-namespace
type: Opaque
data:
  POSTGRES_PASSWORD: YWRtaW4=
#  PVC
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: gaming-app-namespace
  labels:
    app: postgres
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
#  DEPLOYMENT
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: gaming-app-namespace
spec:
  serviceName: postgres-service
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        namespace: gaming-app-namespace
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          livenessProbe:
            exec:
              command:
                - pg_isready
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: gaming-app-namespace
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432